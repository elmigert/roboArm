[CONFIG]
# Name of the file doesn't matter. Create a new file and add "challenge" to the file type to create a new challenge
filetype = challenge 
[challenge]
name = Testen
# Different types of blocks, feel free to define your own names
block_types = [One,Three] 
# Adds the priority to the challenge, affects the dropdown menu. The lower the number, the higher it is up in the challenges dropdown menu.
priority = 1
# add type
# test:  for no solution required,
# challenge: Counts as challenge for the magic cube /number of solved challenges
# other: Any additional exercise which has a solution but does not count as a challenge
# - : Any unknown or not defined type will also considered as 'other'
type = test

# Add a text which will be displayed in the command window. Use \n for a forced linebreak. 
sample_text = position(4,3) \nhoehe(1) \npumpe_an() 

# Add a text which will be displayed in the description of the exercise. Use html formating.
description = <b>Testaufgabe: </b> <ul> <li>Bringt den kleinen Baustein mithilfe des Roboterarms von der Position (x=4, y=3) zur Position (6,6).</li></ul> <br><b>Hinweis:</b> <ul> <li>Die Bausteine m√ºssen zu Beginn wie auf der Abbildung platziert sein, damit der Roboterarm sie aufnehmen kann.</li></ul>



[Start_Position]
# Add start positions of the blocks, feel free to name the block with any desired names, e.g. in alphabetic manner. Don't use digits only. 
# Name convention: BlockName = [start_x,start_y,start_z],rotation,type  (use rotation = 90 or 0)
# or BlockName = [start_x,start_y,start_z],type  (rotation = 0)
a = [4,3,1],0,One
b = [7,6,1],One
c = [5,11,1],One
d = [2,12,1],0,One
f = [3,1,1],90,Three
e = [6,6,1],0,Three


[Final_Position]
# The final position of the blocks. There can be less or equal numbers of final position in relation to the numbers of start positions. Similar to the startPosition, any name can be given to the blocks
# Name convention: BlockName = [start_x,start_y,start_z],rotation,type  (use rotation = 90 or 0)
# or BlockName = [start_x,start_y,start_z],type  (rotation = 0)


[Block_Dimensions]
# Add the dimensions of the blocks. Not implemented yet. 
# Name convention: block_type = [length_x,lenght_y]
One = [1,1]
Three = [1,3]

